{"version":3,"sources":["assets/img/rick-morty.jpg","hooks/useGlobal.js","components/CharacterList/CharacterList.js","containers/ListContainer/ListContainer.js","components/EpisodeList/EpisodeList.js","containers/EpisodeContainer/EpisodeContainer.js","hooks/useForm.js","components/LoginForm/LoginForm.js","containers/LoginContainer/LoginContainer.js","pages/LoginPage/LoginPage.js","components/RegisterUser/RegisterUser.js","containers/RegisterContainer/RegisterContainer.js","pages/RegisterPage/RegisterPage.js","containers/PrivateRoute/PrivateRoute.js","pages/HomePage/HomePage.js","components/SimilarTaste/SimilarTaste.js","containers/SimilarContainer/SimilarContainer.js","pages/SimilarPage/SimilarPage.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","listeners","state","characters","episodes","loading","infoPage","next","maxPage","users","1","name","email","password","favoriteEpisodes","episodesWatched","favoriteCharacters","2","3","userList","loggedIn","error","setState","newState","Object","objectSpread","forEach","listener","useGlobal","newListener","useState","useEffect","push","CharacterList","props","_useGlobal","_useGlobal2","slicedToArray","globalState","setGlobalState","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","axios","get","sent","concat","toConsumableArray","data","results","info","pages","stop","apply","this","arguments","getApi","loadMore","_ref2","_callee2","_context2","console","log","highlight","color","marginBottom","regular","react_default","createElement","map","character","index","key","className","style","includes","id","src","image","alt","species","origin","onClick","withoutFavorite","filter","el","defineProperty","toggleFavorites","ListContainer","components_CharacterList_CharacterList","EpisodeList","_globalState$users$lo","episode","air_date","href","url","components_EpisodeList_EpisodeList","useForm","_useState","_useState2","values","setValues","logIn","userId","fakeLogin","find","handleChange","event","target","value","handleSubmit","preventDefault","LoginForm","_useForm","react_router","to","onSubmit","for","type","onChange","action","LoginContainer","components_LoginForm_LoginForm","LoginPage","containers_LoginContainer_LoginContainer","RegisterUser","confirm","controller","AbortController","abort","e","length","toString","htmlFor","required","RegisterContainer","components_RegisterUser_RegisterUser","RegisterPage","containers_RegisterContainer_RegisterContainer","PrivateRoute","Component","component","rest","objectWithoutProperties","localStorage","getItem","assign","render","HomePage","Image","SimilarTaste","yourEpisodeLikes","usersAlsoLiked","some","element","indexOf","withoutCurrentUser","usersThatAlsoLike","user","Similarcontainer","components_SimilarTaste_SimilarTaste","SimilarPage","SimilarContainer","notFound404","LogOut","Header","_useGlobal3","_useGlobal4","react_router_dom","Routes","routes_Header","react","fallback","exact","path","containers_PrivateRoute_PrivateRoute","EpisodeContainer","App","routes","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2261ff40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick-morty.e766e956.jpg\";","import { useState, useEffect } from \"react\";\r\n\r\nlet listeners = [];\r\nlet state = {\r\n  characters: [],\r\n  episodes: [],\r\n  loading: true,\r\n  infoPage: \"\",\r\n  next: \"\",\r\n  maxPage: \"\",\r\n  users: {\r\n    \"1\": {\r\n      name: \"Daenerys\",\r\n      email: \"dan@rm.com\",\r\n      password: \"123\",\r\n      favoriteEpisodes: [],\r\n      episodesWatched: [],\r\n      favoriteCharacters: []\r\n    },\r\n    \"2\": {\r\n      name: \"Tyrion\",\r\n      email: \"ty@rm.com\",\r\n      password: \"123\",\r\n      favoriteEpisodes: [],\r\n      episodesWatched: [],\r\n      favoriteCharacters: []\r\n    },\r\n    \"3\": {\r\n      name: \"Jon\",\r\n      email: \"jon@rm.com\",\r\n      password: \"123\",\r\n      favoriteEpisodes: [],\r\n      episodesWatched: [],\r\n      favoriteCharacters: []\r\n    }\r\n  },\r\n  userList: [\"1\", \"2\", \"3\"],\r\n  loggedIn: null,\r\n  error: null\r\n};\r\n\r\nconst setState = newState => {\r\n  state = { ...state, ...newState };\r\n  listeners.forEach(listener => {\r\n    listener(state);\r\n  });\r\n};\r\n\r\nconst useGlobal = () => {\r\n  const newListener = useState()[1];\r\n  useEffect(() => {\r\n    listeners.push(newListener);\r\n  }, []);\r\n  return [state, setState];\r\n};\r\n\r\nexport default useGlobal;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst CharacterList = props => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { characters, loading, next, loggedIn } = globalState;\r\n  const { favoriteCharacters } = globalState.users[loggedIn];\r\n\r\n  useEffect(() => {\r\n    const getApi = async () => {\r\n      const response = await axios.get(\r\n        \"https://rickandmortyapi.com/api/character/\"\r\n      );\r\n      setGlobalState({\r\n        ...globalState,\r\n        characters: [...globalState.characters, ...response.data.results],\r\n        loading: false,\r\n        ...globalState.infoPage,\r\n        next: response.data.info.next,\r\n        maxPage: response.data.info.pages\r\n      });\r\n    };\r\n    getApi();\r\n  }, []);\r\n\r\n  const loadMore = async () => {\r\n    const response = await axios.get(next);\r\n    console.log(response);\r\n    setGlobalState({\r\n      ...globalState,\r\n      characters: [...globalState.characters, ...response.data.results],\r\n      loading: false,\r\n      ...globalState.infoPage,\r\n      next: response.data.info.next,\r\n      maxPage: response.data.info.pages\r\n    });\r\n  };\r\n\r\n  const toggleFavorites = id => {\r\n    const alreadyFavorite = favoriteCharacters.includes(id);\r\n    if (!alreadyFavorite) {\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: {\r\n          ...globalState.users,\r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteCharacters: [\r\n              ...globalState.users[loggedIn].favoriteCharacters,\r\n              id\r\n            ]\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const withoutFavorite = favoriteCharacters.filter(el => el !== id);\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: {\r\n          ...globalState.users,\r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteCharacters: withoutFavorite\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const highlight = {\r\n    color: \"red\",\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  const regular = {\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <div>Loading...</div>}\r\n      {!loading &&\r\n        characters.map((character, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"character-card\"\r\n            style={\r\n              loggedIn && favoriteCharacters.includes(character.id)\r\n                ? highlight\r\n                : regular\r\n            }\r\n          >\r\n            <div>ID: {character.id}</div>\r\n            <img src={character.image} alt=\"name\" />\r\n            <div>Name: {character.name}</div>\r\n            <div>Species: {character.species}</div>\r\n            <div>Origin: {character.origin.name}</div>\r\n            <button onClick={() => toggleFavorites(character.id)}>\r\n              Add to Favorites\r\n            </button>\r\n          </div>\r\n        ))}\r\n      {!loading && <button onClick={() => loadMore()}>Load More</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from 'react';\r\nimport CharacterList from '../../components/CharacterList/CharacterList'\r\n\r\nconst ListContainer = (props) => {\r\n    return (\r\n        <CharacterList />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst EpisodeList = props => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { episodes, loading, next, loggedIn } = globalState;\r\n\r\n  const { favoriteEpisodes, episodesWatched } = globalState.users[loggedIn];\r\n\r\n  useEffect(() => {\r\n    const getApi = async () => {\r\n      const response = await axios.get(\r\n        \"https://rickandmortyapi.com/api/episode/\"\r\n      );\r\n      console.log(response);\r\n      setGlobalState({\r\n        ...globalState,\r\n        episodes: [...globalState.episodes, ...response.data.results],\r\n        loading: false,\r\n        next: response.data.info.next,\r\n        maxPage: response.data.info.pages\r\n      });\r\n    };\r\n    getApi();\r\n  }, []);\r\n\r\n  const loadMore = async () => {\r\n    const response = await axios.get(next);\r\n    setGlobalState({\r\n      ...globalState,\r\n      episodes: [...globalState.episodes, ...response.data.results],\r\n      loading: false,\r\n      next: response.data.info.next,\r\n      maxPage: response.data.info.pages\r\n    });\r\n  };\r\n\r\n  const toggleFavorites = id => {\r\n    const alreadyFavorite = favoriteEpisodes.includes(id);\r\n    if (!alreadyFavorite) {\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: {\r\n          ...globalState.users,\r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteEpisodes: [\r\n              ...globalState.users[loggedIn].favoriteEpisodes,\r\n              id\r\n            ]\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const withoutFavorite = favoriteEpisodes.filter(el => el !== id);\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: {\r\n          ...globalState.users,\r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteEpisodes: withoutFavorite\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const highlight = {\r\n    color: \"red\",\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  const regular = {\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <div>Loading...</div>}\r\n      {!loading &&\r\n        episodes.map((episode, index) => (\r\n          <div\r\n            className=\"episode-card\"\r\n            key={index}\r\n            style={\r\n              loggedIn && favoriteEpisodes.includes(episode.id)\r\n                ? highlight\r\n                : regular\r\n            }\r\n          >\r\n            <div>ID: {episode.id}</div>\r\n            <div>Name: {episode.name}</div>\r\n            <div>Air Date: {episode.air_date}</div>\r\n            <div>Episode: {episode.episode}</div>\r\n            <a href={episode.url}>Episode URL</a>\r\n            {loggedIn && (\r\n              <button onClick={() => toggleFavorites(episode.id)}>\r\n                Add to Favorites\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      {!loading && <button onClick={() => loadMore()}>Load More</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EpisodeList;\r\n","import React from 'react';\r\nimport EpisodeList from '../../components/EpisodeList/EpisodeList'\r\n\r\nconst ListContainer = (props) => {\r\n    return (\r\n        <EpisodeList />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, { useState } from \"react\";\r\nimport useGlobal from \"../hooks/useGlobal\";\r\n\r\nconst useForm = (users, userList) => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n  const [globalState, setGlobalState] = useGlobal();\r\n\r\n  const handleChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n  console.log(values);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    logIn(values.email, values.password);\r\n  };\r\n\r\n  const logIn = (email, password) => {\r\n    const userId = fakeLogin(email, password, users, userList);\r\n    const errorMessage = \"Email o password incorrecto\";\r\n    console.log(userId);\r\n    if (userId) {\r\n      setGlobalState({\r\n        ...globalState,\r\n        loggedIn: userId,\r\n        error: null\r\n      });\r\n    } else {\r\n      setGlobalState({\r\n        ...globalState,\r\n        loggedIn: null,\r\n        error: errorMessage\r\n      });\r\n    }\r\n  };\r\n\r\n  const fakeLogin = (email, password, users, userList) => {\r\n    return userList.find(userId => {\r\n      return (\r\n        users[userId].email === email && users[userId].password === password\r\n      );\r\n    });\r\n  };\r\n\r\n  return {\r\n    values,\r\n    handleChange,\r\n    handleSubmit\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","import React from \"react\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst LoginForm = () => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const {users, userList, loggedIn, error} = globalState\r\n  const { values, handleChange, handleSubmit } = useForm(users, userList);\r\n  \r\n  if (loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log  In</h2>\r\n    <form onSubmit={handleSubmit}>\r\n      <label for='email'>Email</label>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        id='email'\r\n        onChange={handleChange}\r\n        value={values.email}\r\n      />\r\n      <label for='email'>Password</label>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        id='password'\r\n        onChange={handleChange}\r\n        value={values.password}\r\n      />\r\n      <button action=\"submit\">Log in</button>\r\n      <div>{error}</div>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport LoginForm from '../../components/LoginForm/LoginForm'\r\n\r\nconst LoginContainer = () => {\r\n    return (\r\n        <LoginForm />\r\n    );\r\n};\r\n\r\nexport default LoginContainer;","import React from 'react';\r\nimport LoginContainer from '../../containers/LoginContainer/LoginContainer'\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <LoginContainer/>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst RegisterUser = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm: \"\"\r\n  });\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { error, users, userList, loggedIn } = globalState;\r\n  var controller = new AbortController();\r\n\r\n  useEffect(() => {\r\n    return () => controller.abort();\r\n  });\r\n\r\n  const handleChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (values.password === values.confirm) {\r\n      const emailUsed = userList\r\n        .map(el => users[el].email === values.email)\r\n        .includes(true);\r\n\r\n      if (!emailUsed) {\r\n        setGlobalState({\r\n          ...globalState,\r\n          users: {\r\n            ...users,\r\n            [userList.length + 1]: {\r\n              name: values.name,\r\n              email: values.email,\r\n              password: values.password,\r\n              favoriteEpisodes: [],\r\n              episodesWatched: [],\r\n              favoriteCharacters: []\r\n            }\r\n          },\r\n          userList: [...userList, (userList.length + 1).toString()],\r\n          error: null,\r\n          loggedIn: userList.length + 1\r\n        });\r\n        setValues({\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirm: \"\"\r\n        });\r\n      } else {\r\n        const errorMessage = \"This email is being used by another user\";\r\n        setGlobalState({\r\n          ...globalState,\r\n          loggedIn: null,\r\n          error: errorMessage\r\n        });\r\n      }\r\n    } else {\r\n      const errorMessage = \"Please check the entered information.\";\r\n      setGlobalState({\r\n        ...globalState,\r\n        loggedIn: null,\r\n        error: errorMessage\r\n      });\r\n    }\r\n  };\r\n  if (loggedIn) { return <Redirect to=\"/\" />} else {\r\n  return (\r\n\r\n    <div>\r\n\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"name\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          onChange={handleChange}\r\n          value={values.name}\r\n          required\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          id=\"email\"\r\n          onChange={handleChange}\r\n          value={values.email}\r\n          required\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          id=\"password\"\r\n          onChange={handleChange}\r\n          value={values.password}\r\n          required\r\n        />\r\n        <label htmlFor=\"confirm\">Confirm Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirm\"\r\n          id=\"confirm\"\r\n          onChange={handleChange}\r\n          value={values.confirm}\r\n          required\r\n        />\r\n        <button action=\"submit\">Register</button>\r\n        <div>{error}</div>\r\n      </form>\r\n    </div>\r\n  )};\r\n};\r\n\r\nexport default RegisterUser;\r\n","import React from \"react\";\r\nimport RegisterUser from \"../../components/RegisterUser/RegisterUser\";\r\n\r\nconst RegisterContainer = props => {\r\n  return <RegisterUser />;\r\n};\r\n\r\nexport default RegisterContainer;\r\n","import React from 'react';\r\nimport RegisterContainer from '../../containers/RegisterContainer/RegisterContainer'\r\n\r\nconst RegisterPage = (props) => {\r\n    return (\r\n        <RegisterContainer/>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;","import React, { useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst PrivateRoute = props => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { component: Component, ...rest } = props;\r\n\r\n  const { loggedIn } = globalState;\r\n\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (loggedIn || userId) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport Image from \"../../assets/img/rick-morty.jpg\";\r\n\r\nconst HomePage = props => {\r\n  return (\r\n    <div>\r\n      <h1>React & Morty</h1>\r\n      <img src={Image} alt=\"Rick-and-morty\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst SimilarTaste = props => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { loggedIn } = globalState;\r\n\r\n  const yourEpisodeLikes = globalState.users[loggedIn].favoriteEpisodes;\r\n  const usersAlsoLiked = globalState.userList.filter(el =>\r\n    globalState.users[el].favoriteEpisodes.some(\r\n      element => yourEpisodeLikes.indexOf(element) >= 0\r\n    )\r\n  );\r\n  const withoutCurrentUser = usersAlsoLiked.filter(\r\n    el => el !== loggedIn.toString()\r\n  );\r\n  const usersThatAlsoLike = withoutCurrentUser.map(\r\n    el => globalState.users[el].name\r\n  );\r\n  console.log(yourEpisodeLikes);\r\n  console.log(usersAlsoLiked);\r\n  console.log(withoutCurrentUser);\r\n  console.log(usersThatAlsoLike.length);\r\n  return (\r\n    <div>\r\n      <h2>You like some of the same episodes as:</h2>\r\n      {usersThatAlsoLike.length <= 0 && <p>No one :(</p>}\r\n      {usersThatAlsoLike.map((user, index) => (\r\n        <ul>\r\n          <li key={index}>{user}</li>\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimilarTaste;\r\n","import React from 'react';\r\nimport SimilarTaste from '../../components/SimilarTaste/SimilarTaste'\r\n\r\nconst Similarcontainer = (props) => {\r\n    return (\r\n        <SimilarTaste />\r\n    );\r\n};\r\n\r\nexport default Similarcontainer;","import React from \"react\";\r\nimport SimilarContainer from \"../../containers/SimilarContainer/SimilarContainer\";\r\n\r\nconst SimilarPage = props => {\r\n  return <SimilarContainer />;\r\n};\r\n\r\nexport default SimilarPage;\r\n","import React, { Suspense } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  NavLink,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport ListContainer from \"./containers/ListContainer/ListContainer\";\r\nimport EpisodeContainer from \"./containers/EpisodeContainer/EpisodeContainer\";\r\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\r\nimport RegisterPage from \"./pages/RegisterPage/RegisterPage\";\r\nimport PrivateRoute from \"./containers/PrivateRoute/PrivateRoute\";\r\nimport useGlobal from \"./hooks/useGlobal\";\r\nimport HomePage from \"./pages/HomePage/HomePage\";\r\nimport SimilarPage from \"./pages/SimilarPage/SimilarPage\";\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Header />\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <PrivateRoute exact path=\"/list\" component={EpisodeContainer} />\r\n            <PrivateRoute exact path=\"/characters\" component={ListContainer} />\r\n            <PrivateRoute exact path=\"/similar\" component={SimilarPage} />\r\n            <Route exact path=\"/login\" component={LoginPage} />\r\n            <Route exact path=\"/register\" component={RegisterPage} />\r\n            <Route exact path=\"/logout\" component={LogOut} />\r\n            <Route path=\"*\" component={notFound404} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction notFound404() {\r\n  return <h2>404 Page not found</h2>;\r\n}\r\n\r\nconst LogOut = () => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  setGlobalState({ ...globalState, loggedIn: null });\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nconst Header = () => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { loggedIn } = globalState;\r\n  return (\r\n    <nav className=\"NavBar\">\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/\">Home</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/list\">Episodes</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/characters\">Characters</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/similar\">Similar</NavLink>\r\n        </li>\r\n        {!loggedIn && (\r\n          <li>\r\n            <NavLink to=\"/register\">Register</NavLink>\r\n          </li>\r\n        )}\r\n        {!loggedIn && (\r\n          <li>\r\n            <NavLink to=\"/login\">Log In</NavLink>\r\n          </li>\r\n        )}\r\n        {loggedIn && (\r\n          <li>\r\n            <NavLink to=\"/logout\">Log Out</NavLink>\r\n          </li>\r\n        )}\r\n        <li>User: {loggedIn ? globalState.users[loggedIn].name : \"\"}</li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport Routes from \"./routes\";\r\n\r\nfunction App() {\r\n  return <Routes />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}