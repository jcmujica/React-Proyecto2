{"version":3,"sources":["hooks/useGlobal.js","components/CharacterList/CharacterList.js","containers/ListContainer/ListContainer.js","components/EpisodeList/EpisodeList.js","containers/EpisodeContainer/EpisodeContainer.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["listeners","state","characters","episodes","loading","infoPage","next","maxPage","users","name","email","favoriteEpisodes","episodesWatched","favoriteCharacters","setState","newState","Object","objectSpread","forEach","listener","useGlobal","newListener","useState","useEffect","push","CharacterList","props","_useGlobal","_useGlobal2","slicedToArray","globalState","setGlobalState","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","axios","get","sent","concat","toConsumableArray","data","results","info","pages","stop","apply","this","arguments","getApi","loadMore","_ref2","_callee2","_context2","highlight","color","marginBottom","regular","react_default","createElement","map","character","index","key","className","style","includes","id","species","origin","onClick","console","log","alreadyFavorite","withoutFavorite","filter","el","toggleFavorites","ListContainer","components_CharacterList_CharacterList","EpisodeList","_globalState$users","episode","air_date","components_EpisodeList_EpisodeList","Home","Similar","Login","Header","react_router_dom","to","Routes","react_router","react","fallback","exact","path","component","EpisodeContainer","App","routes","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a17beff9.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nlet listeners = [];\r\nlet state = ({\r\n  characters: [],\r\n  episodes: [],\r\n  loading: true,\r\n  infoPage: '',\r\n  next: '',\r\n  maxPage: '',\r\n  users: {\r\n    name: '',\r\n    email: '',\r\n    favoriteEpisodes: [],\r\n    episodesWatched: [],\r\n    favoriteCharacters: []}\r\n  })\r\n\r\nconst setState = (newState) => {\r\n  state = { ...state, ...newState };\r\n  listeners.forEach((listener) => {\r\n    listener(state);\r\n  });\r\n};\r\n\r\nconst useGlobal = () => {\r\n  const newListener = useState()[1];\r\n  useEffect(() => {\r\n    listeners.push(newListener);\r\n  }, []);\r\n  return [state, setState];\r\n};\r\n\r\nexport default useGlobal;","import React, {useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport useGlobal from '../../hooks/useGlobal'\r\n\r\nconst CharacterList = (props) => {\r\n    const [globalState, setGlobalState] = useGlobal();\r\n    const { characters, loading, next} = globalState\r\n    const {favoriteCharacters} = globalState.users\r\n\r\n    useEffect(() => {\r\n        const getApi = async () => {\r\n          const response = await axios.get('https://rickandmortyapi.com/api/character/')\r\n          setGlobalState({...globalState,\r\n            characters: [...globalState.characters, \r\n                ...response.data.results],\r\n            loading: false,\r\n            ...globalState.infoPage,\r\n            next: response.data.info.next,\r\n            maxPage: response.data.info.pages\r\n            })\r\n            }\r\n        getApi()\r\n      }, [])\r\n\r\n    const loadMore = async () => {\r\n        const response = await axios.get(next)\r\n        setGlobalState({...globalState,\r\n            characters: [...globalState.characters, \r\n            ...response.data.results],\r\n            loading: false,\r\n            ...globalState.infoPage,\r\n            next: response.data.info.next,\r\n            maxPage: response.data.info.pages\r\n            })\r\n    }\r\n\r\n    const toggleFavorites = (id) => {\r\n        console.log('added to favorites: ', id)\r\n        const alreadyFavorite = favoriteCharacters.includes(id)\r\n        console.log('favoriteCharacters',favoriteCharacters)\r\n        if (!alreadyFavorite) {\r\n            setGlobalState({...globalState,\r\n                users: {...globalState.users,\r\n                favoriteCharacters: [...globalState.users.favoriteCharacters,id]\r\n                }\r\n            })\r\n        } else {\r\n            const withoutFavorite = favoriteCharacters.filter(el => el !== id)\r\n            console.log('withoutFavorite', withoutFavorite)\r\n            setGlobalState({...globalState,\r\n                users: {...globalState.users,\r\n                favoriteCharacters: withoutFavorite\r\n                }\r\n            })\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    const highlight = {\r\n        color: 'red',\r\n        marginBottom: '20px'\r\n    }\r\n\r\n    const regular = {\r\n        marginBottom: '20px'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {loading && <div>Loading...</div>}\r\n        {!loading && characters.map((character, index) => (\r\n            <div key={index} className='character-card' style={favoriteCharacters.includes(character.id) ? highlight : regular}>\r\n              <div>\r\n               ID: {character.id}\r\n              </div>\r\n              <div>\r\n               Name: {character.name}\r\n              </div>\r\n              <div>\r\n               Species: {character.species}\r\n              </div>\r\n              <div>\r\n               Origin: {character.origin.name}\r\n              </div>\r\n              <button onClick={() => toggleFavorites(character.id)}>Add to Favorites</button>\r\n            </div>\r\n          ))}\r\n          {!loading && <button onClick={() => loadMore()}>Load More</button>}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default CharacterList;","import React from 'react';\r\nimport CharacterList from '../../components/CharacterList/CharacterList'\r\n\r\nconst ListContainer = (props) => {\r\n    return (\r\n        <CharacterList />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, {useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport useGlobal from '../../hooks/useGlobal'\r\n\r\nconst EpisodeList = (props) => {\r\n    const [globalState, setGlobalState] = useGlobal();\r\n    const { episodes, loading, next, maxPage } = globalState\r\n    const {favoriteEpisodes,episodesWatched} = globalState.users\r\n\r\n    useEffect(() => {\r\n        const getApi = async () => {\r\n          const response = await axios.get('https://rickandmortyapi.com/api/episode/')\r\n          console.log(response)\r\n          setGlobalState({...globalState,\r\n            episodes: [...globalState.episodes, \r\n                ...response.data.results],\r\n            loading: false,\r\n            ...globalState.infoPage,\r\n            next: response.data.info.next,\r\n            maxPage: response.data.info.pages\r\n            })\r\n            }\r\n        getApi()\r\n      }, [])\r\n\r\n    const loadMore = async () => {\r\n        const response = await axios.get(next)\r\n        setGlobalState({...globalState,\r\n            episodes: [...globalState.episodes, \r\n            ...response.data.results],\r\n            loading: false,\r\n            ...globalState.infoPage,\r\n            next: response.data.info.next,\r\n            maxPage: response.data.info.pages\r\n            })\r\n    }\r\n\r\n    const toggleFavorites = (id) => {\r\n        console.log('added to favorites: ', id)\r\n        const alreadyFavorite = favoriteEpisodes.includes(id)\r\n        console.log('favoriteepisodes',favoriteEpisodes)\r\n        if (!alreadyFavorite) {\r\n            setGlobalState({...globalState,\r\n                users: {...globalState.users,\r\n                favoriteEpisodes: [...globalState.users.favoriteEpisodes,id]\r\n                }\r\n            })\r\n        } else {\r\n            const withoutFavorite = favoriteEpisodes.filter(el => el !== id)\r\n            console.log('withoutFavorite', withoutFavorite)\r\n            setGlobalState({...globalState,\r\n                users: {...globalState.users,\r\n                favoriteEpisodes: withoutFavorite\r\n                }\r\n            })\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    const highlight = {\r\n        color: 'red',\r\n        marginBottom: '20px'\r\n    }\r\n\r\n    const regular = {\r\n        marginBottom: '20px'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {loading && <div>Loading...</div>}\r\n        {!loading && episodes.map((episode, index) => (\r\n            <div className='episode-card' key={index} style={favoriteEpisodes.includes(episode.id) ? highlight : regular}>\r\n              <div>\r\n               ID: {episode.id}\r\n              </div>\r\n              <div>\r\n               Name: {episode.name}\r\n              </div>\r\n              <div>\r\n               Air Date: {episode.air_date}\r\n              </div>\r\n              <div>\r\n               Episode: {episode.episode}\r\n              </div>\r\n              <button onClick={() => toggleFavorites(episode.id)}>Add to Favorites</button>\r\n            </div>\r\n          ))}\r\n          {!loading && <button onClick={() => loadMore()}>Load More</button>}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default EpisodeList;","import React from 'react';\r\nimport EpisodeList from '../../components/EpisodeList/EpisodeList'\r\n\r\nconst ListContainer = (props) => {\r\n    return (\r\n        <EpisodeList />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, { lazy, Suspense } from \"react\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  NavLink,\r\n  Switch\r\n} from \"react-router-dom\"\r\nimport ListContainer from './containers/ListContainer/ListContainer'\r\nimport EpisodeContainer from './containers/EpisodeContainer/EpisodeContainer'\r\n// const HouseTableContainer = lazy(() =>\r\n//   import(\"./containers/HouseTableContainer/index\")\r\n//)\r\n\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n          <Suspense fallback={<h1>Loading...</h1>}>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/list\" component={EpisodeContainer} />\r\n            <Route exact path=\"/characters\" component={ListContainer} />\r\n            <Route exact path=\"/similar\" component={Similar} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            {/* <Route path=\"*\" component={notFound404} /> */}\r\n          </Suspense>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nfunction Home() {\r\n  return <h2>Home</h2>\r\n}\r\n\r\n// function List () {\r\n//     return <h2>List</h2>\r\n// }\r\n\r\n// function notFound404() {\r\n//   return <h2>404 Page not found</h2>\r\n// }\r\n\r\nfunction Characters() {\r\n  return <h2>Characters</h2>\r\n}\r\n\r\nfunction Similar() {\r\n  return <h1>Similar</h1>\r\n}\r\n\r\nfunction Login () {\r\n    return <h1>Login</h1>\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"NavBar\">\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/\">Home</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/list\">List</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/characters\">Characters</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/similar\">Similar</NavLink>\r\n        </li>\r\n        <li>\r\n            <NavLink to=\"/login\">Log In</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport './App.scss'\r\nimport Routes from './routes'\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <Routes />\r\n  );\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}