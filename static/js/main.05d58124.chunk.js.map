{"version":3,"sources":["assets/img/rick-morty.jpg","hooks/useGlobal.js","components/CharacterList/CharacterList.js","containers/ListContainer/ListContainer.js","components/EpisodeList/EpisodeList.js","containers/EpisodeContainer/EpisodeContainer.js","hooks/useForm.js","components/LoginForm/LoginForm.js","containers/LoginContainer/LoginContainer.js","pages/LoginPage/LoginPage.js","components/RegisterUser/RegisterUser.js","containers/RegisterContainer/RegisterContainer.js","pages/RegisterPage/RegisterPage.js","containers/PrivateRoute/PrivateRoute.js","pages/HomePage/HomePage.js","components/SimilarTaste/SimilarTaste.js","containers/SimilarContainer/SimilarContainer.js","pages/SimilarPage/SimilarPage.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","listeners","state","characters","episodes","loading","infoPage","next","maxPage","users","1","email","password","favoriteEpisodes","episodesWatched","favoriteCharacters","2","3","userList","loggedIn","error","setState","newState","Object","objectSpread","forEach","listener","useGlobal","newListener","useState","useEffect","push","CharacterList","props","_useGlobal","_useGlobal2","slicedToArray","globalState","setGlobalState","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","axios","get","sent","concat","toConsumableArray","data","results","info","pages","stop","apply","this","arguments","getApi","loadMore","_ref2","_callee2","_context2","console","log","highlight","color","marginBottom","regular","react_default","createElement","map","character","index","key","className","style","includes","id","src","image","alt","name","species","origin","onClick","withoutFavorite","filter","el","defineProperty","toggleFavorites","ListContainer","components_CharacterList_CharacterList","EpisodeList","_globalState$users$lo","episode","air_date","href","url","components_EpisodeList_EpisodeList","useForm","_useState","_useState2","values","setValues","logIn","userId","fakeLogin","find","handleChange","event","target","value","handleSubmit","preventDefault","LoginForm","_useForm","react_router","to","onSubmit","for","type","onChange","action","LoginContainer","components_LoginForm_LoginForm","LoginPage","containers_LoginContainer_LoginContainer","RegisterUser","confirm","controller","AbortController","abort","e","length","toString","required","RegisterContainer","components_RegisterUser_RegisterUser","RegisterPage","containers_RegisterContainer_RegisterContainer","PrivateRoute","Component","component","rest","objectWithoutProperties","localStorage","getItem","assign","render","HomePage","Image","SimilarTaste","yourEpisodeLikes","usersAlsoLiked","Similarcontainer","components_SimilarTaste_SimilarTaste","SimilarPage","SimilarContainer","notFound404","Header","react_router_dom","Routes","routes_Header","react","fallback","exact","path","containers_PrivateRoute_PrivateRoute","EpisodeContainer","App","routes","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05d58124.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick-morty.e766e956.jpg\";","import { useState, useEffect } from \"react\";\r\n\r\nlet listeners = [];\r\nlet state = {\r\n  characters: [],\r\n  episodes: [],\r\n  loading: true,\r\n  infoPage: \"\",\r\n  next: \"\",\r\n  maxPage: \"\",\r\n  users: {\r\n    \"1\": {\r\n      email: \"dan@rm.com\",\r\n      password: \"123\",\r\n      favoriteEpisodes: [4],\r\n      episodesWatched: [],\r\n      favoriteCharacters: []\r\n    },\r\n    \"2\": {\r\n      email: \"ty@rm.com\",\r\n      password: \"123\",\r\n      favoriteEpisodes: [],\r\n      episodesWatched: [],\r\n      favoriteCharacters: []\r\n    },\r\n    \"3\": {\r\n      email: \"jon@rm.com\",\r\n      password: \"123\",\r\n      favoriteEpisodes: [4, 1],\r\n      episodesWatched: [],\r\n      favoriteCharacters: []\r\n    }\r\n  },  \r\n  userList: ['1', '2', '3'],\r\n  loggedIn: 1,\r\n  error: null\r\n};\r\n\r\nconst setState = newState => {\r\n  state = { ...state, ...newState };\r\n  listeners.forEach(listener => {\r\n    listener(state);\r\n  });\r\n};\r\n\r\nconst useGlobal = () => {\r\n  const newListener = useState()[1];\r\n  useEffect(() => {\r\n    listeners.push(newListener);\r\n  }, []);\r\n  return [state, setState];\r\n};\r\n\r\nexport default useGlobal;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst CharacterList = props => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { characters, loading, next, loggedIn } = globalState;\r\n  const { favoriteCharacters } = globalState.users[loggedIn];\r\n\r\n  useEffect(() => {\r\n    const getApi = async () => {\r\n      const response = await axios.get(\r\n        \"https://rickandmortyapi.com/api/character/\"\r\n      );\r\n      setGlobalState({\r\n        ...globalState,\r\n        characters: [...globalState.characters, ...response.data.results],\r\n        loading: false,\r\n        ...globalState.infoPage,\r\n        next: response.data.info.next,\r\n        maxPage: response.data.info.pages\r\n      });\r\n    };\r\n    getApi();\r\n  }, []);\r\n\r\n  const loadMore = async () => {\r\n    const response = await axios.get(next);\r\n    console.log(response);\r\n    setGlobalState({\r\n      ...globalState,\r\n      characters: [...globalState.characters, ...response.data.results],\r\n      loading: false,\r\n      ...globalState.infoPage,\r\n      next: response.data.info.next,\r\n      maxPage: response.data.info.pages\r\n    });\r\n  };\r\n\r\n  const toggleFavorites = id => {\r\n    const alreadyFavorite = favoriteCharacters.includes(id);\r\n    if (!alreadyFavorite) {\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: {\r\n          ...globalState.users,\r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteCharacters: [\r\n              ...globalState.users[loggedIn].favoriteCharacters,\r\n              id\r\n            ]\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const withoutFavorite = favoriteCharacters.filter(el => el !== id);\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: { ...globalState.users, \r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteCharacters: withoutFavorite\r\n          }\r\n       }\r\n      });\r\n    }\r\n  };\r\n\r\n  const highlight = {\r\n    color: \"red\",\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  const regular = {\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <div>Loading...</div>}\r\n      {!loading &&\r\n        characters.map((character, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"character-card\"\r\n            style={\r\n              loggedIn && favoriteCharacters.includes(character.id)\r\n                ? highlight\r\n                : regular\r\n            }\r\n          >\r\n            <div>ID: {character.id}</div>\r\n            <img src={character.image} alt=\"name\" />\r\n            <div>Name: {character.name}</div>\r\n            <div>Species: {character.species}</div>\r\n            <div>Origin: {character.origin.name}</div>\r\n            <button onClick={() => toggleFavorites(character.id)}>\r\n              Add to Favorites\r\n            </button>\r\n          </div>\r\n        ))}\r\n      {!loading && <button onClick={() => loadMore()}>Load More</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from 'react';\r\nimport CharacterList from '../../components/CharacterList/CharacterList'\r\n\r\nconst ListContainer = (props) => {\r\n    return (\r\n        <CharacterList />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst EpisodeList = props => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { episodes, loading, next, loggedIn } = globalState;\r\n\r\n  const { favoriteEpisodes, episodesWatched } = globalState.users[loggedIn];\r\n\r\n  useEffect(() => {\r\n    const getApi = async () => {\r\n      const response = await axios.get(\r\n        \"https://rickandmortyapi.com/api/episode/\"\r\n      );\r\n      console.log(response);\r\n      setGlobalState({\r\n        ...globalState,\r\n        episodes: [...globalState.episodes, ...response.data.results],\r\n        loading: false,\r\n        next: response.data.info.next,\r\n        maxPage: response.data.info.pages\r\n      });\r\n    };\r\n    getApi();\r\n  }, []);\r\n\r\n  const loadMore = async () => {\r\n    const response = await axios.get(next);\r\n    setGlobalState({\r\n      ...globalState,\r\n      episodes: [...globalState.episodes, ...response.data.results],\r\n      loading: false,\r\n      next: response.data.info.next,\r\n      maxPage: response.data.info.pages\r\n    });\r\n  };\r\n\r\n  const toggleFavorites = id => {\r\n    const alreadyFavorite = favoriteEpisodes.includes(id);\r\n    if (!alreadyFavorite) {\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: {\r\n          ...globalState.users,\r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteEpisodes: [\r\n              ...globalState.users[loggedIn].favoriteEpisodes,\r\n              id\r\n            ]\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const withoutFavorite = favoriteEpisodes.filter(el => el !== id);\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: {\r\n          ...globalState.users,\r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteEpisodes: withoutFavorite\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const highlight = {\r\n    color: \"red\",\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  const regular = {\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <div>Loading...</div>}\r\n      {!loading &&\r\n        episodes.map((episode, index) => (\r\n          <div\r\n            className=\"episode-card\"\r\n            key={index}\r\n            style={\r\n              loggedIn && favoriteEpisodes.includes(episode.id)\r\n                ? highlight\r\n                : regular\r\n            }\r\n          >\r\n            <div>ID: {episode.id}</div>\r\n            <div>Name: {episode.name}</div>\r\n            <div>Air Date: {episode.air_date}</div>\r\n            <div>Episode: {episode.episode}</div>\r\n            <a href={episode.url}>Episode URL</a>\r\n            {loggedIn && (\r\n              <button onClick={() => toggleFavorites(episode.id)}>\r\n                Add to Favorites\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      {!loading && <button onClick={() => loadMore()}>Load More</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EpisodeList;\r\n","import React from 'react';\r\nimport EpisodeList from '../../components/EpisodeList/EpisodeList'\r\n\r\nconst ListContainer = (props) => {\r\n    return (\r\n        <EpisodeList />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, { useState } from 'react'\r\nimport useGlobal from '../hooks/useGlobal'\r\n\r\nconst useForm = (users, userList) => {\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: ''\r\n  })\r\n  const [globalState, setGlobalState] = useGlobal();\r\n\r\n  const handleChange = event => {\r\n    const name = event.target.name\r\n    const value = event.target.value\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    })\r\n  }\r\n    console.log(values)\r\n  \r\n    const handleSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    logIn(values.email, values.password)\r\n  }\r\n\r\n  const logIn = (email, password) => {\r\n    const userId = fakeLogin(email,password, users, userList)\r\n    const errorMessage = 'Email o password incorrecto'\r\n    console.log(userId)\r\n    if (userId) {\r\n      setGlobalState({\r\n        ...globalState,\r\n        loggedIn: userId,\r\n        error: null\r\n      })\r\n    } else {\r\n      setGlobalState({\r\n      ...globalState,\r\n      loggedIn: null,\r\n      error: errorMessage\r\n    })\r\n    }\r\n  }\r\n\r\n  const fakeLogin = (email, password, users, userList) => {\r\n    return userList.find(userId => {\r\n      return (\r\n        users[userId].email === email &&\r\n        users[userId].password === password\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  \r\n    // const handleChange = (event) => {\r\n    //   const {\r\n    //     name,\r\n    //     value\r\n    //   } = event.target\r\n  \r\n    //   setValues({\r\n    //     ...values,\r\n    //     [name]: value\r\n    //   })\r\n    // }\r\n  \r\n\r\n  \r\n    // if (globalState.loggedIn) {\r\n    //   return <Redirect to='/' />\r\n    // }\r\n\r\n\r\n\r\n\r\n  return {\r\n    values,\r\n    handleChange,\r\n    handleSubmit\r\n  }\r\n}\r\n\r\nexport default useForm\r\n","import React from \"react\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst LoginForm = () => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const {users, userList, loggedIn, error} = globalState\r\n  const { values, handleChange, handleSubmit } = useForm(users, userList);\r\n  \r\n  if (loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log  In</h2>\r\n    <form onSubmit={handleSubmit}>\r\n      <label for='email'>Email</label>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        id='email'\r\n        onChange={handleChange}\r\n        value={values.email}\r\n      />\r\n      <label for='email'>Password</label>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        id='password'\r\n        onChange={handleChange}\r\n        value={values.password}\r\n      />\r\n      <button action=\"submit\">Log in</button>\r\n      <div>{error}</div>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport LoginForm from '../../components/LoginForm/LoginForm'\r\n\r\nconst LoginContainer = () => {\r\n    return (\r\n        <LoginForm />\r\n    );\r\n};\r\n\r\nexport default LoginContainer;","import React from 'react';\r\nimport LoginContainer from '../../containers/LoginContainer/LoginContainer'\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <LoginContainer/>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst RegisterUser = () => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm: \"\"\r\n  });\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { error, users, userList } = globalState;\r\n  var controller = new AbortController();\r\n\r\n  useEffect(() => {\r\n    return () => controller.abort();\r\n  });\r\n\r\n  const handleChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (values.password === values.confirm) {\r\n      const emailUsed = userList\r\n        .map(el => users[el].email === values.email)\r\n        .includes(true);\r\n\r\n      if (!emailUsed) {\r\n        setGlobalState({\r\n          ...globalState,\r\n          users: {\r\n            ...users,\r\n            [userList.length + 1]: {\r\n              email: values.email,\r\n              password: values.password,\r\n              favoriteEpisodes: [],\r\n              episodesWatched: [],\r\n              favoriteCharacters: []\r\n            }\r\n          },\r\n          userList: [...userList, (userList.length + 1).toString()],\r\n          error: null\r\n        });\r\n      } else {\r\n        const errorMessage = \"This email is being used by another user\";\r\n        setGlobalState({\r\n          ...globalState,\r\n          loggedIn: null,\r\n          error: errorMessage\r\n        });\r\n      }\r\n    } else {\r\n      const errorMessage = \"Please check the entered information.\";\r\n      setGlobalState({\r\n        ...globalState,\r\n        loggedIn: null,\r\n        error: errorMessage\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label for=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          id=\"email\"\r\n          onChange={handleChange}\r\n          value={values.email}\r\n          required\r\n        />\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          id=\"password\"\r\n          onChange={handleChange}\r\n          value={values.password}\r\n          required\r\n        />\r\n        <label for=\"confirm\">Confirm Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirm\"\r\n          id=\"confirm\"\r\n          onChange={handleChange}\r\n          value={values.confirm}\r\n          required\r\n        />\r\n        <button action=\"submit\">Register</button>\r\n        <div>{error}</div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterUser;\r\n","import React from 'react';\r\nimport RegisterUser from '../../components/RegisterUser/RegisterUser'\r\n\r\nconst RegisterContainer = (props) => {\r\n    return (\r\n        <RegisterUser/>\r\n    );\r\n};\r\n\r\nexport default RegisterContainer;","import React from 'react';\r\nimport RegisterContainer from '../../containers/RegisterContainer/RegisterContainer'\r\n\r\nconst RegisterPage = (props) => {\r\n    return (\r\n        <RegisterContainer/>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;","import React, { useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst PrivateRoute = props => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const {\r\n    component: Component,\r\n    // setUserId,\r\n    ...rest\r\n  } = props;\r\n\r\n  const { loggedIn } = globalState;\r\n\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  // useEffect(() => {\r\n  //   if (userId) {\r\n  //     setUserId(userId)\r\n  //   }\r\n  // }, [])\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (loggedIn || userId) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\nimport Image from \"../../assets/img/rick-morty.jpg\";\r\n\r\nconst HomePage = props => {\r\n  return (\r\n    <div>\r\n      <h1>React & Morty</h1>\r\n      <img src={Image} alt=\"Rick-and-morty\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport  useGlobal from '../../hooks/useGlobal'\r\n\r\nconst SimilarTaste = (props) => {\r\n    const [globalState, setGlobalState] = useGlobal();\r\n    const { loggedIn } = globalState\r\n\r\n    const yourEpisodeLikes = globalState.users[loggedIn].favoriteEpisodes\r\n    const usersAlsoLiked = globalState.users\r\n    console.log(yourEpisodeLikes)\r\n    console.log(usersAlsoLiked)\r\n\r\n    return (\r\n    <div>\r\n        <h2>You like some of the same episodes as:</h2>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default SimilarTaste;","import React from 'react';\r\nimport SimilarTaste from '../../components/SimilarTaste/SimilarTaste'\r\n\r\nconst Similarcontainer = (props) => {\r\n    return (\r\n        <SimilarTaste />\r\n    );\r\n};\r\n\r\nexport default Similarcontainer;","import React from 'react';\r\nimport SimilarContainer from '../../containers/SimilarContainer/SimilarContainer'\r\n\r\nconst SimilarPage = (props) => {\r\n    return (\r\n        <SimilarContainer/>\r\n    );\r\n};\r\n\r\nexport default SimilarPage;","import React, { lazy, Suspense } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  NavLink,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport ListContainer from \"./containers/ListContainer/ListContainer\";\r\nimport EpisodeContainer from \"./containers/EpisodeContainer/EpisodeContainer\";\r\nimport LoginPage from './pages/LoginPage/LoginPage'\r\nimport RegisterPage from \"./pages/RegisterPage/RegisterPage\"\r\nimport PrivateRoute from './containers/PrivateRoute/PrivateRoute'\r\nimport useGlobal from './hooks/useGlobal'\r\nimport HomePage from './pages/HomePage/HomePage'\r\nimport SimilarPage from './pages/SimilarPage/SimilarPage'\r\n\r\n\r\nfunction Routes() {\r\n  \r\n  \r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Header />\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <PrivateRoute exact path=\"/list\" component={EpisodeContainer} />\r\n            <PrivateRoute exact path=\"/characters\" component={ListContainer} />\r\n            <PrivateRoute exact path=\"/similar\" component={SimilarPage} />\r\n            <Route exact path=\"/login\" component={LoginPage} />\r\n            <Route exact path=\"/register\" component={RegisterPage}/>\r\n            <Route path=\"*\" component={notFound404} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction notFound404() {\r\n  return <h2>404 Page not found</h2>;\r\n}\r\n\r\n\r\nconst Header = () => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { loggedIn } = globalState\r\n  return (\r\n    <nav className=\"NavBar\">\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/\">Home</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/list\">Episodes</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/characters\">Characters</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/similar\">Similar</NavLink>\r\n        </li>\r\n        {!loggedIn &&\r\n        <li>\r\n          <NavLink to=\"/login\">Log In</NavLink>\r\n        </li>}\r\n        <li>\r\n          <NavLink to=\"/register\">Register</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react'\nimport './App.scss'\nimport Routes from './routes'\n\n\n\nfunction App() {\n  return (\n      <Routes />\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}