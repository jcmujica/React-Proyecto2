{"version":3,"sources":["assets/img/rick-morty.jpg","hooks/useGlobal.js","components/CharacterList/CharacterList.js","containers/ListContainer/ListContainer.js","components/EpisodeList/EpisodeList.js","containers/EpisodeContainer/EpisodeContainer.js","hooks/useForm.js","components/LoginForm/LoginForm.js","containers/LoginContainer/LoginContainer.js","pages/LoginPage/LoginPage.js","components/RegisterUser/RegisterUser.js","containers/RegisterContainer/RegisterContainer.js","pages/RegisterPage/RegisterPage.js","containers/PrivateRoute/PrivateRoute.js","pages/HomePage/HomePage.js","components/SimilarTaste/SimilarTaste.js","containers/SimilarContainer/SimilarContainer.js","pages/SimilarPage/SimilarPage.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","listeners","state","characters","episodes","loading","infoPage","next","maxPage","users","name","email","password","favoriteEpisodes","episodesWatched","favoriteCharacters","userList","loggedIn","error","setState","newState","forEach","listener","useGlobal","newListener","useState","useEffect","push","CharacterList","props","globalState","setGlobalState","a","axios","get","response","data","results","info","pages","getApi","loadMore","console","log","highlight","color","marginBottom","regular","map","character","index","key","className","style","includes","id","src","image","alt","species","origin","onClick","withoutFavorite","filter","el","toggleFavorites","ListContainer","EpisodeList","episode","air_date","href","url","useForm","values","setValues","logIn","userId","fakeLogin","find","handleChange","event","target","value","handleSubmit","preventDefault","LoginForm","to","onSubmit","for","type","onChange","action","LoginContainer","LoginPage","RegisterUser","confirm","controller","AbortController","abort","e","length","toString","htmlFor","required","RegisterContainer","RegisterPage","PrivateRoute","Component","component","rest","localStorage","getItem","render","HomePage","Image","SimilarTaste","yourEpisodeLikes","usersAlsoLiked","some","element","indexOf","withoutCurrentUser","usersThatAlsoLike","user","Similarcontainer","SimilarPage","SimilarContainer","notFound404","LogOut","Header","Routes","fallback","exact","path","EpisodeContainer","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1ee0ef0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick-morty.e766e956.jpg\";","import { useState, useEffect } from \"react\";\r\n\r\nlet listeners = [];\r\nlet state = {\r\n  characters: [],\r\n  episodes: [],\r\n  loading: true,\r\n  infoPage: \"\",\r\n  next: \"\",\r\n  maxPage: \"\",\r\n  users: {\r\n    \"1\": {\r\n      name: \"Daenerys\",\r\n      email: \"dan@rm.com\",\r\n      password: \"123\",\r\n      favoriteEpisodes: [],\r\n      episodesWatched: [],\r\n      favoriteCharacters: []\r\n    },\r\n    \"2\": {\r\n      name: \"Tyrion\",\r\n      email: \"ty@rm.com\",\r\n      password: \"123\",\r\n      favoriteEpisodes: [],\r\n      episodesWatched: [],\r\n      favoriteCharacters: []\r\n    },\r\n    \"3\": {\r\n      name: \"Jon\",\r\n      email: \"jon@rm.com\",\r\n      password: \"123\",\r\n      favoriteEpisodes: [],\r\n      episodesWatched: [],\r\n      favoriteCharacters: []\r\n    }\r\n  },\r\n  userList: [\"1\", \"2\", \"3\"],\r\n  loggedIn: \"2\",\r\n  error: null\r\n};\r\n\r\nconst setState = newState => {\r\n  state = { ...state, ...newState };\r\n  listeners.forEach(listener => {\r\n    listener(state);\r\n  });\r\n};\r\n\r\nconst useGlobal = () => {\r\n  const newListener = useState()[1];\r\n  useEffect(() => {\r\n    listeners.push(newListener);\r\n  }, []);\r\n  return [state, setState];\r\n};\r\n\r\nexport default useGlobal;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst CharacterList = props => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { characters, loading, next, loggedIn } = globalState;\r\n  const { favoriteCharacters } = globalState.users[loggedIn];\r\n\r\n  useEffect(() => {\r\n    const getApi = async () => {\r\n      const response = await axios.get(\r\n        \"https://rickandmortyapi.com/api/character/\"\r\n      );\r\n      setGlobalState({\r\n        ...globalState,\r\n        characters: [...globalState.characters, ...response.data.results],\r\n        loading: false,\r\n        ...globalState.infoPage,\r\n        next: response.data.info.next,\r\n        maxPage: response.data.info.pages\r\n      });\r\n    };\r\n    getApi();\r\n  }, []);\r\n\r\n  const loadMore = async () => {\r\n    const response = await axios.get(next);\r\n    console.log(response);\r\n    setGlobalState({\r\n      ...globalState,\r\n      characters: [...globalState.characters, ...response.data.results],\r\n      loading: false,\r\n      ...globalState.infoPage,\r\n      next: response.data.info.next,\r\n      maxPage: response.data.info.pages\r\n    });\r\n  };\r\n\r\n  const toggleFavorites = id => {\r\n    const alreadyFavorite = favoriteCharacters.includes(id);\r\n    if (!alreadyFavorite) {\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: {\r\n          ...globalState.users,\r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteCharacters: [\r\n              ...globalState.users[loggedIn].favoriteCharacters,\r\n              id\r\n            ]\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const withoutFavorite = favoriteCharacters.filter(el => el !== id);\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: {\r\n          ...globalState.users,\r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteCharacters: withoutFavorite\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const highlight = {\r\n    color: \"red\",\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  const regular = {\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <div>Loading...</div>}\r\n      {!loading &&\r\n        characters.map((character, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"character-card\"\r\n            style={\r\n              loggedIn && favoriteCharacters.includes(character.id)\r\n                ? highlight\r\n                : regular\r\n            }\r\n          >\r\n            <div>ID: {character.id}</div>\r\n            <img src={character.image} alt=\"name\" />\r\n            <div>Name: {character.name}</div>\r\n            <div>Species: {character.species}</div>\r\n            <div>Origin: {character.origin.name}</div>\r\n            <button onClick={() => toggleFavorites(character.id)}>\r\n              Add to Favorites\r\n            </button>\r\n          </div>\r\n        ))}\r\n      {!loading && <button onClick={() => loadMore()}>Load More</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from 'react';\r\nimport CharacterList from '../../components/CharacterList/CharacterList'\r\n\r\nconst ListContainer = (props) => {\r\n    return (\r\n        <CharacterList />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst EpisodeList = props => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { episodes, loading, next, loggedIn } = globalState;\r\n\r\n  const { favoriteEpisodes, episodesWatched } = globalState.users[loggedIn];\r\n\r\n  useEffect(() => {\r\n    const getApi = async () => {\r\n      const response = await axios.get(\r\n        \"https://rickandmortyapi.com/api/episode/\"\r\n      );\r\n      console.log(response);\r\n      setGlobalState({\r\n        ...globalState,\r\n        episodes: [...globalState.episodes, ...response.data.results],\r\n        loading: false,\r\n        next: response.data.info.next,\r\n        maxPage: response.data.info.pages\r\n      });\r\n    };\r\n    getApi();\r\n  }, []);\r\n\r\n  const loadMore = async () => {\r\n    const response = await axios.get(next);\r\n    setGlobalState({\r\n      ...globalState,\r\n      episodes: [...globalState.episodes, ...response.data.results],\r\n      loading: false,\r\n      next: response.data.info.next,\r\n      maxPage: response.data.info.pages\r\n    });\r\n  };\r\n\r\n  const toggleFavorites = id => {\r\n    const alreadyFavorite = favoriteEpisodes.includes(id);\r\n    if (!alreadyFavorite) {\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: {\r\n          ...globalState.users,\r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteEpisodes: [\r\n              ...globalState.users[loggedIn].favoriteEpisodes,\r\n              id\r\n            ]\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const withoutFavorite = favoriteEpisodes.filter(el => el !== id);\r\n      setGlobalState({\r\n        ...globalState,\r\n        users: {\r\n          ...globalState.users,\r\n          [loggedIn]: {\r\n            ...globalState.users[loggedIn],\r\n            favoriteEpisodes: withoutFavorite\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const highlight = {\r\n    color: \"red\",\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  const regular = {\r\n    marginBottom: \"20px\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <div>Loading...</div>}\r\n      {!loading &&\r\n        episodes.map((episode, index) => (\r\n          <div\r\n            className=\"episode-card\"\r\n            key={index}\r\n            style={\r\n              loggedIn && favoriteEpisodes.includes(episode.id)\r\n                ? highlight\r\n                : regular\r\n            }\r\n          >\r\n            <div>ID: {episode.id}</div>\r\n            <div>Name: {episode.name}</div>\r\n            <div>Air Date: {episode.air_date}</div>\r\n            <div>Episode: {episode.episode}</div>\r\n            <a href={episode.url}>Episode URL</a>\r\n            {loggedIn && (\r\n              <button onClick={() => toggleFavorites(episode.id)}>\r\n                Add to Favorites\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      {!loading && <button onClick={() => loadMore()}>Load More</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EpisodeList;\r\n","import React from 'react';\r\nimport EpisodeList from '../../components/EpisodeList/EpisodeList'\r\n\r\nconst ListContainer = (props) => {\r\n    return (\r\n        <EpisodeList />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import { useState } from \"react\";\r\nimport useGlobal from \"../hooks/useGlobal\";\r\n\r\nconst useForm = (users, userList) => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n  const [globalState, setGlobalState] = useGlobal();\r\n\r\n  const handleChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n  console.log(values);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    logIn(values.email, values.password);\r\n  };\r\n\r\n  const logIn = (email, password) => {\r\n    const userId = fakeLogin(email, password, users, userList);\r\n    const errorMessage = \"Email o password incorrecto\";\r\n    console.log(userId);\r\n    if (userId) {\r\n      setGlobalState({\r\n        ...globalState,\r\n        loggedIn: userId,\r\n        error: null\r\n      });\r\n    } else {\r\n      setGlobalState({\r\n        ...globalState,\r\n        loggedIn: null,\r\n        error: errorMessage\r\n      });\r\n    }\r\n  };\r\n\r\n  const fakeLogin = (email, password, users, userList) => {\r\n    return userList.find(userId => {\r\n      return (\r\n        users[userId].email === email && users[userId].password === password\r\n      );\r\n    });\r\n  };\r\n\r\n  return {\r\n    values,\r\n    handleChange,\r\n    handleSubmit\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","import React from \"react\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst LoginForm = () => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const {users, userList, loggedIn, error} = globalState\r\n  const { values, handleChange, handleSubmit } = useForm(users, userList);\r\n  \r\n  if (loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log  In</h2>\r\n    <form onSubmit={handleSubmit}>\r\n      <label for='email'>Email</label>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        id='email'\r\n        onChange={handleChange}\r\n        value={values.email}\r\n      />\r\n      <label for='email'>Password</label>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        id='password'\r\n        onChange={handleChange}\r\n        value={values.password}\r\n      />\r\n      <button action=\"submit\">Log in</button>\r\n      <div>{error}</div>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport LoginForm from '../../components/LoginForm/LoginForm'\r\n\r\nconst LoginContainer = () => {\r\n    return (\r\n        <LoginForm />\r\n    );\r\n};\r\n\r\nexport default LoginContainer;","import React from 'react';\r\nimport LoginContainer from '../../containers/LoginContainer/LoginContainer'\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <LoginContainer/>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst RegisterUser = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm: \"\"\r\n  });\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { error, users, userList, loggedIn } = globalState;\r\n  var controller = new AbortController();\r\n\r\n  useEffect(() => {\r\n    return () => controller.abort();\r\n  });\r\n\r\n  const handleChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (values.password === values.confirm) {\r\n      const emailUsed = userList\r\n        .map(el => users[el].email === values.email)\r\n        .includes(true);\r\n\r\n      if (!emailUsed) {\r\n        setGlobalState({\r\n          ...globalState,\r\n          users: {\r\n            ...users,\r\n            [userList.length + 1]: {\r\n              name: values.name,\r\n              email: values.email,\r\n              password: values.password,\r\n              favoriteEpisodes: [],\r\n              episodesWatched: [],\r\n              favoriteCharacters: []\r\n            }\r\n          },\r\n          userList: [...userList, (userList.length + 1).toString()],\r\n          error: null,\r\n          loggedIn: userList.length + 1\r\n        });\r\n        setValues({\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirm: \"\"\r\n        });\r\n      } else {\r\n        const errorMessage = \"This email is being used by another user\";\r\n        setGlobalState({\r\n          ...globalState,\r\n          loggedIn: null,\r\n          error: errorMessage\r\n        });\r\n      }\r\n    } else {\r\n      const errorMessage = \"Please check the entered information.\";\r\n      setGlobalState({\r\n        ...globalState,\r\n        loggedIn: null,\r\n        error: errorMessage\r\n      });\r\n    }\r\n  };\r\n  if (loggedIn) { return <Redirect to=\"/\" /> } else {\r\n    return (\r\n\r\n      <div>\r\n\r\n        <h1>Register</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"name\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            onChange={handleChange}\r\n            value={values.name}\r\n            required\r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n            value={values.email}\r\n            required\r\n          />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            required\r\n          />\r\n          <label htmlFor=\"confirm\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirm\"\r\n            id=\"confirm\"\r\n            onChange={handleChange}\r\n            value={values.confirm}\r\n            required\r\n          />\r\n          <button action=\"submit\">Register</button>\r\n          <div>{error}</div>\r\n        </form>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nexport default RegisterUser;\r\n","import React from \"react\";\r\nimport RegisterUser from \"../../components/RegisterUser/RegisterUser\";\r\n\r\nconst RegisterContainer = props => {\r\n  return <RegisterUser />;\r\n};\r\n\r\nexport default RegisterContainer;\r\n","import React from 'react';\r\nimport RegisterContainer from '../../containers/RegisterContainer/RegisterContainer'\r\n\r\nconst RegisterPage = (props) => {\r\n    return (\r\n        <RegisterContainer/>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst PrivateRoute = props => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { component: Component, ...rest } = props;\r\n\r\n  const { loggedIn } = globalState;\r\n\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (loggedIn || userId) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport Image from \"../../assets/img/rick-morty.jpg\";\r\n\r\nconst HomePage = props => {\r\n  return (\r\n    <div>\r\n      <h1>React & Morty</h1>\r\n      <img src={Image} alt=\"Rick-and-morty\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport useGlobal from \"../../hooks/useGlobal\";\r\n\r\nconst SimilarTaste = props => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  const { loggedIn } = globalState;\r\n\r\n  const yourEpisodeLikes = globalState.users[loggedIn].favoriteEpisodes;\r\n  const usersAlsoLiked = globalState.userList.filter(el =>\r\n    globalState.users[el].favoriteEpisodes.some(\r\n      element => yourEpisodeLikes.indexOf(element) >= 0\r\n    )\r\n  );\r\n  const withoutCurrentUser = usersAlsoLiked.filter(\r\n    el => el !== loggedIn.toString()\r\n  );\r\n  const usersThatAlsoLike = withoutCurrentUser.map(\r\n    el => globalState.users[el].name\r\n  );\r\n  console.log(yourEpisodeLikes);\r\n  console.log(usersAlsoLiked);\r\n  console.log(withoutCurrentUser);\r\n  console.log(usersThatAlsoLike.length);\r\n  return (\r\n    <div>\r\n      <h2>You like some of the same episodes as:</h2>\r\n      {usersThatAlsoLike.length <= 0 && <p>No one :(</p>}\r\n      {usersThatAlsoLike.map((user, index) => (\r\n        <ul>\r\n          <li key={index}>{user}</li>\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimilarTaste;\r\n","import React from 'react';\r\nimport SimilarTaste from '../../components/SimilarTaste/SimilarTaste'\r\n\r\nconst Similarcontainer = (props) => {\r\n    return (\r\n        <SimilarTaste />\r\n    );\r\n};\r\n\r\nexport default Similarcontainer;","import React from \"react\";\r\nimport SimilarContainer from \"../../containers/SimilarContainer/SimilarContainer\";\r\n\r\nconst SimilarPage = props => {\r\n  return <SimilarContainer />;\r\n};\r\n\r\nexport default SimilarPage;\r\n","import React, { Suspense } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  NavLink,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport ListContainer from \"./containers/ListContainer/ListContainer\";\r\nimport EpisodeContainer from \"./containers/EpisodeContainer/EpisodeContainer\";\r\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\r\nimport RegisterPage from \"./pages/RegisterPage/RegisterPage\";\r\nimport PrivateRoute from \"./containers/PrivateRoute/PrivateRoute\";\r\nimport useGlobal from \"./hooks/useGlobal\";\r\nimport HomePage from \"./pages/HomePage/HomePage\";\r\nimport SimilarPage from \"./pages/SimilarPage/SimilarPage\";\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Header />\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <PrivateRoute exact path=\"/list\" component={EpisodeContainer} />\r\n            <PrivateRoute exact path=\"/characters\" component={ListContainer} />\r\n            <PrivateRoute exact path=\"/similar\" component={SimilarPage} />\r\n            <Route exact path=\"/login\" component={LoginPage} />\r\n            <Route exact path=\"/register\" component={RegisterPage} />\r\n            <Route exact path=\"/logout\" component={LogOut} />\r\n            <Route path=\"*\" component={notFound404} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction notFound404() {\r\n  return <h2>404 Page not found</h2>;\r\n}\r\n\r\nconst LogOut = () => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  setGlobalState({ ...globalState, loggedIn: null });\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nconst Header = () => {\r\n  const [globalState, setGlobalState] = useGlobal();\r\n  console.log(globalState)\r\n  const { loggedIn } = globalState;\r\n  return (\r\n    <nav className=\"NavBar\">\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/\">Home</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/list\">Episodes</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/characters\">Characters</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/similar\">Similar</NavLink>\r\n        </li>\r\n        {!loggedIn && (\r\n          <li>\r\n            <NavLink to=\"/register\">Register</NavLink>\r\n          </li>\r\n        )}\r\n        {!loggedIn && (\r\n          <li>\r\n            <NavLink to=\"/login\">Log In</NavLink>\r\n          </li>\r\n        )}\r\n        {loggedIn && (\r\n          <li>\r\n            <NavLink to=\"/logout\">Log Out</NavLink>\r\n          </li>\r\n        )}\r\n        <li>User: {loggedIn ? globalState.users[loggedIn].name : \"\"}</li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport Routes from \"./routes\";\r\n\r\nfunction App() {\r\n  return <Routes />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}