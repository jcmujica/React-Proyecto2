{"version":3,"sources":["hooks/useGlobal.js","components/CharacterList/CharacterList.js","containers/ListContainer/ListContainer.js","components/EpisodeList/EpisodeList.js","containers/EpisodeContainer/EpisodeContainer.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["listeners","state","characters","episodes","loading","infoPage","next","maxPage","users","name","email","favoriteEpisodes","episodesWatched","favoriteCharacters","setState","newState","Object","objectSpread","forEach","listener","useGlobal","newListener","useState","useEffect","push","CharacterList","props","_useGlobal","_useGlobal2","slicedToArray","globalState","setGlobalState","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","axios","get","sent","concat","toConsumableArray","data","results","info","pages","stop","apply","this","arguments","getApi","loadMore","_ref2","_callee2","_context2","console","log","highlight","color","marginBottom","regular","react_default","createElement","map","character","index","key","className","style","includes","id","src","image","alt","species","origin","onClick","alreadyFavorite","withoutFavorite","filter","el","toggleFavorites","ListContainer","components_CharacterList_CharacterList","EpisodeList","_globalState$users","episode","air_date","href","url","components_EpisodeList_EpisodeList","Home","Similar","Login","Header","react_router_dom","to","Routes","react_router","react","fallback","exact","path","component","EpisodeContainer","App","routes","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6fd936d1.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nlet listeners = [];\r\nlet state = ({\r\n  characters: [],\r\n  episodes: [],\r\n  loading: true,\r\n  infoPage: '',\r\n  next: '',\r\n  maxPage: '',\r\n  users: {\r\n    name: '',\r\n    email: '',\r\n    favoriteEpisodes: [],\r\n    episodesWatched: [],\r\n    favoriteCharacters: []}\r\n  })\r\n\r\nconst setState = (newState) => {\r\n  state = { ...state, ...newState };\r\n  listeners.forEach((listener) => {\r\n    listener(state);\r\n  });\r\n};\r\n\r\nconst useGlobal = () => {\r\n  const newListener = useState()[1];\r\n  useEffect(() => {\r\n    listeners.push(newListener);\r\n  }, []);\r\n  return [state, setState];\r\n};\r\n\r\nexport default useGlobal;","import React, {useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport useGlobal from '../../hooks/useGlobal'\r\n\r\nconst CharacterList = (props) => {\r\n    const [globalState, setGlobalState] = useGlobal();\r\n    const { characters, loading, next} = globalState\r\n    const {favoriteCharacters} = globalState.users\r\n\r\n    useEffect(() => {\r\n        const getApi = async () => {\r\n          const response = await axios.get('https://rickandmortyapi.com/api/character/')\r\n          setGlobalState({...globalState,\r\n            characters: [...globalState.characters, \r\n                ...response.data.results],\r\n            loading: false,\r\n            ...globalState.infoPage,\r\n            next: response.data.info.next,\r\n            maxPage: response.data.info.pages\r\n            })\r\n            }\r\n        getApi()\r\n      }, [])\r\n\r\n    const loadMore = async () => {\r\n        const response = await axios.get(next)\r\n        console.log(response)\r\n        setGlobalState({...globalState,\r\n            characters: [...globalState.characters, \r\n            ...response.data.results],\r\n            loading: false,\r\n            ...globalState.infoPage,\r\n            next: response.data.info.next,\r\n            maxPage: response.data.info.pages\r\n            })\r\n    }\r\n\r\n    const toggleFavorites = (id) => {\r\n        console.log('added to favorites: ', id)\r\n        const alreadyFavorite = favoriteCharacters.includes(id)\r\n        console.log('favoriteCharacters',favoriteCharacters)\r\n        if (!alreadyFavorite) {\r\n            setGlobalState({...globalState,\r\n                users: {...globalState.users,\r\n                favoriteCharacters: [...globalState.users.favoriteCharacters,id]\r\n                }\r\n            })\r\n        } else {\r\n            const withoutFavorite = favoriteCharacters.filter(el => el !== id)\r\n            console.log('withoutFavorite', withoutFavorite)\r\n            setGlobalState({...globalState,\r\n                users: {...globalState.users,\r\n                favoriteCharacters: withoutFavorite\r\n                }\r\n            })\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    const highlight = {\r\n        color: 'red',\r\n        marginBottom: '20px'\r\n    }\r\n\r\n    const regular = {\r\n        marginBottom: '20px'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {loading && <div>Loading...</div>}\r\n        {!loading && characters.map((character, index) => (\r\n            <div key={index} className='character-card' style={favoriteCharacters.includes(character.id) ? highlight : regular}>\r\n              <div>\r\n               ID: {character.id}\r\n              </div>\r\n              <img src={character.image} alt=\"name\" />\r\n              <div>\r\n               Name: {character.name}\r\n              </div>\r\n              <div>\r\n               Species: {character.species}\r\n              </div>\r\n              <div>\r\n               Origin: {character.origin.name}\r\n              </div>\r\n              <button onClick={() => toggleFavorites(character.id)}>Add to Favorites</button>\r\n            </div>\r\n          ))}\r\n          {!loading && <button onClick={() => loadMore()}>Load More</button>}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default CharacterList;","import React from 'react';\r\nimport CharacterList from '../../components/CharacterList/CharacterList'\r\n\r\nconst ListContainer = (props) => {\r\n    return (\r\n        <CharacterList />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, {useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport useGlobal from '../../hooks/useGlobal'\r\n\r\nconst EpisodeList = (props) => {\r\n    const [globalState, setGlobalState] = useGlobal();\r\n    const { episodes, loading, next, maxPage } = globalState\r\n    const {favoriteEpisodes,episodesWatched} = globalState.users\r\n\r\n    useEffect(() => {\r\n        const getApi = async () => {\r\n          const response = await axios.get('https://rickandmortyapi.com/api/episode/')\r\n          console.log(response)\r\n          setGlobalState({...globalState,\r\n            episodes: [...globalState.episodes, \r\n                ...response.data.results],\r\n            loading: false,\r\n            ...globalState.infoPage,\r\n            next: response.data.info.next,\r\n            maxPage: response.data.info.pages\r\n            })\r\n            }\r\n        getApi()\r\n      }, [])\r\n\r\n    const loadMore = async () => {\r\n        const response = await axios.get(next)\r\n        setGlobalState({...globalState,\r\n            episodes: [...globalState.episodes, \r\n            ...response.data.results],\r\n            loading: false,\r\n            ...globalState.infoPage,\r\n            next: response.data.info.next,\r\n            maxPage: response.data.info.pages\r\n            })\r\n    }\r\n\r\n    const toggleFavorites = (id) => {\r\n        console.log('added to favorites: ', id)\r\n        const alreadyFavorite = favoriteEpisodes.includes(id)\r\n        console.log('favoriteepisodes',favoriteEpisodes)\r\n        if (!alreadyFavorite) {\r\n            setGlobalState({...globalState,\r\n                users: {...globalState.users,\r\n                favoriteEpisodes: [...globalState.users.favoriteEpisodes,id]\r\n                }\r\n            })\r\n        } else {\r\n            const withoutFavorite = favoriteEpisodes.filter(el => el !== id)\r\n            console.log('withoutFavorite', withoutFavorite)\r\n            setGlobalState({...globalState,\r\n                users: {...globalState.users,\r\n                favoriteEpisodes: withoutFavorite\r\n                }\r\n            })\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    const highlight = {\r\n        color: 'red',\r\n        marginBottom: '20px'\r\n    }\r\n\r\n    const regular = {\r\n        marginBottom: '20px'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {loading && <div>Loading...</div>}\r\n        {!loading && episodes.map((episode, index) => (\r\n            <div className='episode-card' key={index} style={favoriteEpisodes.includes(episode.id) ? highlight : regular}>\r\n              <div>\r\n               ID: {episode.id}\r\n              </div>\r\n              <div>\r\n               Name: {episode.name}\r\n              </div>\r\n              <div>\r\n               Air Date: {episode.air_date}\r\n              </div>\r\n              <div>\r\n               Episode: {episode.episode}\r\n              </div>\r\n              <a href={episode.url}>Episode URL</a>\r\n              <button onClick={() => toggleFavorites(episode.id)}>Add to Favorites</button>\r\n            </div>\r\n          ))}\r\n          {!loading && <button onClick={() => loadMore()}>Load More</button>}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default EpisodeList;","import React from 'react';\r\nimport EpisodeList from '../../components/EpisodeList/EpisodeList'\r\n\r\nconst ListContainer = (props) => {\r\n    return (\r\n        <EpisodeList />\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React, { lazy, Suspense } from \"react\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  NavLink,\r\n  Switch\r\n} from \"react-router-dom\"\r\nimport ListContainer from './containers/ListContainer/ListContainer'\r\nimport EpisodeContainer from './containers/EpisodeContainer/EpisodeContainer'\r\n// const HouseTableContainer = lazy(() =>\r\n//   import(\"./containers/HouseTableContainer/index\")\r\n//)\r\n\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n          <Suspense fallback={<h1>Loading...</h1>}>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/list\" component={EpisodeContainer} />\r\n            <Route exact path=\"/characters\" component={ListContainer} />\r\n            <Route exact path=\"/similar\" component={Similar} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            {/* <Route path=\"*\" component={notFound404} /> */}\r\n          </Suspense>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nfunction Home() {\r\n  return <h2>Home</h2>\r\n}\r\n\r\n// function List () {\r\n//     return <h2>List</h2>\r\n// }\r\n\r\n// function notFound404() {\r\n//   return <h2>404 Page not found</h2>\r\n// }\r\n\r\nfunction Characters() {\r\n  return <h2>Characters</h2>\r\n}\r\n\r\nfunction Similar() {\r\n  return <h1>Similar</h1>\r\n}\r\n\r\nfunction Login () {\r\n    return <h1>Login</h1>\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"NavBar\">\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/\">Home</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/list\">List</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/characters\">Characters</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/similar\">Similar</NavLink>\r\n        </li>\r\n        <li>\r\n            <NavLink to=\"/login\">Log In</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\nimport './App.scss'\nimport Routes from './routes'\n\n\n\nfunction App() {\n  return (\n      <Routes />\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}